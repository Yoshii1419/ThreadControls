/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package testejava;

import java.awt.Image;
import java.util.concurrent.Callable;
import java.util.concurrent.ExecutionException;
import java.util.concurrent.FutureTask;
import java.util.concurrent.RunnableFuture;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.ImageIcon;
import static java.lang.Thread.sleep;

/**
 *
 * @author Yuri.Ramos
 */
public class ThreadFrame extends javax.swing.JFrame {
    
    /**
     * Creates new form NovoJFrame
     */
    public ThreadFrame() {
        initComponents();
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jClickMeButton = new javax.swing.JButton();
        jLabelOutput = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setMaximumSize(new java.awt.Dimension(100, 100));
        jLabel1.setMinimumSize(new java.awt.Dimension(100, 100));

        jProgressBar.setStringPainted(true);

        jLabelProgressBar.setText("jLabel2");

        jClickMeButton.setText("Click Me");
        jClickMeButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jClickMeButtonActionPerformed(evt);
            }
        });

        jLabelOutput.setText("jLabel2");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(65, 65, 65)
                .addComponent(jClickMeButton)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabelOutput, javax.swing.GroupLayout.DEFAULT_SIZE, 257, Short.MAX_VALUE)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addComponent(jLabelProgressBar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jProgressBar, javax.swing.GroupLayout.DEFAULT_SIZE, 257, Short.MAX_VALUE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 8, Short.MAX_VALUE)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 108, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(57, 57, 57))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(42, 42, 42)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(21, 21, 21)
                        .addComponent(jLabelProgressBar)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jProgressBar, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jClickMeButton))
                        .addGap(18, 18, 18)
                        .addComponent(jLabelOutput))
                    .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(49, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jClickMeButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jClickMeButtonActionPerformed
        // TODO add your handling code here:
        
        // A Thread t2 aciona um gif na tela //
        Thread t2 = new Thread() {
            public void run() {
                ImageIcon  imgIcon = new ImageIcon("C:\\Users\\yuri.ramos\\Downloads\\JavaMovies-V4\\image_java_project\\loader.gif");
                imgIcon.setImage(imgIcon.getImage().getScaledInstance(30, 30, Image.SCALE_DEFAULT));
                jLabel1.setIcon(imgIcon);
            }
        };
        t2.start();
        
        // A Thread t1 inicia o carregamento de uma progressbar //
        Thread t1 = new Thread() {
            public void run() {
                for(int i = 0; i < 101; i++) {
                    try {
                        sleep(100);
                        jProgressBar.setValue(i);
                        jLabelProgressBar.setText("Executando Processos " + i);
                    } catch (InterruptedException ex) {
                        Logger.getLogger(ThreadFrame.class.getName()).log(Level.SEVERE, null, ex);
                    }
                }
                jLabel1.setIcon(null);
            }
        };
        t1.start();
        
        
        // utilizando Runnable para retornar valor em um mÃ©todo run //
        RunnableFuture f = new FutureTask(new Callable<String>() {
            
            @Override
            public String call() throws Exception {
                return "Consegui pegar o valor dessa porra!";
            }
            
        });
        // start the thread to execute it (you may also use an Executor)
        new Thread(f).start();
        String out = "";
        try {
            // get the result
            out = (String) f.get();
        } catch (InterruptedException ex) {
            Logger.getLogger(ThreadFrame.class.getName()).log(Level.SEVERE, null, ex);
        } catch (ExecutionException ex) {
            Logger.getLogger(ThreadFrame.class.getName()).log(Level.SEVERE, null, ex);
        }
        
        this.jLabelOutput.setText(out);
        
    }//GEN-LAST:event_jClickMeButtonActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ThreadFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ThreadFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ThreadFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ThreadFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new ThreadFrame().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jClickMeButton;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabelOutput;
    private final javax.swing.JLabel jLabelProgressBar = new javax.swing.JLabel();
    private final javax.swing.JProgressBar jProgressBar = new javax.swing.JProgressBar();
    // End of variables declaration//GEN-END:variables
}
